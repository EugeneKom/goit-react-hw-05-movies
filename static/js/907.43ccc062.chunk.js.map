{"version":3,"file":"static/js/907.43ccc062.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/API/API.js","components/MovieDetails/MovieDetailsMarcup.styled.js","components/MovieDetails/MovieDetailsMarcup.jsx","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = 'api_key=6628254a4cb0b774890e6f0759ab9dd7';\nconst MOST_POPULAR_FILMS = '/trending/movie/day';\nconst SEARCH_FILMS_API = '/search/movie';\n\nconst fetchTopMovies = async () => {\n  try {\n    const response = await fetch(`\n  ${BASE_URL}${MOST_POPULAR_FILMS}?${KEY}&language=en`);\n    if (response.ok) {\n      const result = await response.json();\n      return result.results;\n    } else throw new Error(`Bad request${response.status}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchFindMovies = async query => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}${SEARCH_FILMS_API}?${KEY}&language=en&query=${query}`\n    );\n    if (response.ok) {\n      const result = await response.json();\n      return result.results;\n    } else throw new Error(`Bad request${response.status}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchMovieToId = async id => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${id}?${KEY}&language=en-US`\n    );\n    if (response.ok) {\n      const result = await response.json();\n      return result;\n    } else throw new Error(`Bad request${response.status}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchActorMovieToId = async id => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${id}/credits?${KEY}&language=en-US`\n    );\n    if (response.ok) {\n      const result = await response.json();\n      return result;\n    } else throw new Error(`Bad request${response.status}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchMovieReviewsToId = async id => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${id}/reviews?${KEY}&language=en-US`\n    );\n    if (response.ok) {\n      const result = await response.json();\n      return result.results;\n    } else throw new Error(`Bad request${response.status}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst API_FETCH = {\n  fetchTopMovies,\n  fetchFindMovies,\n  fetchMovieToId,\n  fetchActorMovieToId,\n  fetchMovieReviewsToId,\n};\nexport default API_FETCH;\n","import styled from 'styled-components';\n\nexport const MovieDetailsWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  gap: 10px;\n  h2 {\n    text-align: center;\n  }\n  ul {\n    list-style-type: none;\n    display: flex;\n    gap: 20px;\n  }\n  a {\n    width: 130px;\n    height: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n    border: 1px solid;\n    border-radius: 15px;\n    text-decoration: none;\n    text-transform: uppercase;\n    font-weight: bold;\n    color: blueviolet;\n  }\n`;\n\nexport const MovieInfo = styled.ul`\n  display: flex;\n  flex-direction: column;\n  padding: 0;\n  & > ul {\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { MovieDetailsWrapper, MovieInfo } from './MovieDetailsMarcup.styled';\n\nconst MovieDetailsMarcup = ({ detailsMovie }) => {\n  const {\n    title,\n    overview,\n    genres,\n    backdrop_path: moveImg,\n    vote_average: userScore,\n  } = detailsMovie;\n\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  const normilizeMovieScore = `${userScore.toFixed(1)}`.replace('.', '');\n\n  return (\n    <MovieDetailsWrapper>\n      <Link to={backLinkHref}>Go back</Link>\n\n      <img\n        src={`https://image.tmdb.org/t/p/w500${moveImg}`}\n        alt={title}\n        width={330}\n        height={240}\n      />\n      <div>\n        <h2>{title}</h2>\n        <MovieInfo>\n          <li>User Score {normilizeMovieScore}%</li>\n          <li>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n          </li>\n          <li>\n            <h3>Genres</h3>\n            <ul>\n              {genres.map(({ id, name }) => (\n                <li key={id}>{name}</li>\n              ))}\n            </ul>\n          </li>\n        </MovieInfo>\n      </div>\n      <h3>Additional information</h3>\n      <ul>\n        <li>\n          <Link to=\"cast\" state={{ from: backLinkHref }}>\n            cast\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{ from: backLinkHref }}>\n            reviews\n          </Link>\n        </li>\n      </ul>\n    </MovieDetailsWrapper>\n  );\n};\n\nexport default MovieDetailsMarcup;\n","import { Outlet, useParams } from 'react-router-dom';\nimport React, { useEffect, useState } from 'react';\nimport API_FETCH from 'components/API/API';\nimport MovieDetailsMarcup from './MovieDetailsMarcup';\n\nconst MovieDetails = () => {\n  const [detailsMovie, setdetailsMovie] = useState([]);\n  const { moviesId } = useParams();\n\n  useEffect(() => {\n    API_FETCH.fetchMovieToId(moviesId).then(setdetailsMovie);\n  }, [moviesId]);\n\n  return (\n    <>\n      {detailsMovie.length === 0 ? (\n        <div>Loading...</div>\n      ) : (\n        <MovieDetailsMarcup detailsMovie={detailsMovie} />\n      )}\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","BASE_URL","KEY","fetchTopMovies","fetch","response","ok","json","result","results","Error","status","console","log","fetchFindMovies","query","fetchMovieToId","id","fetchActorMovieToId","fetchMovieReviewsToId","MovieDetailsWrapper","styled","MovieInfo","detailsMovie","title","overview","genres","moveImg","backdrop_path","userScore","vote_average","backLinkHref","useLocation","state","from","normilizeMovieScore","toFixed","replace","to","src","alt","width","height","map","name","useState","setdetailsMovie","moviesId","useParams","useEffect","API_FETCH","length"],"sourceRoot":""}