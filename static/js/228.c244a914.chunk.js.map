{"version":3,"file":"static/js/228.c244a914.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/API/API.js","components/MovieReviews/Reviews.jsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = 'api_key=6628254a4cb0b774890e6f0759ab9dd7';\nconst MOST_POPULAR_FILMS = '/trending/movie/day';\nconst SEARCH_FILMS_API = '/search/movie';\n\nconst fetchTopMovies = async () => {\n  try {\n    const response = await fetch(`\n  ${BASE_URL}${MOST_POPULAR_FILMS}?${KEY}&language=en`);\n    if (response.ok) {\n      const result = await response.json();\n      return result.results;\n    } else throw new Error(`Bad request${response.status}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchFindMovies = async query => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}${SEARCH_FILMS_API}?${KEY}&language=en&query=${query}`\n    );\n    if (response.ok) {\n      const result = await response.json();\n      return result.results;\n    } else throw new Error(`Bad request${response.status}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchMovieToId = async id => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${id}?${KEY}&language=en-US`\n    );\n    if (response.ok) {\n      const result = await response.json();\n      return result;\n    } else throw new Error(`Bad request${response.status}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchActorMovieToId = async id => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${id}/credits?${KEY}&language=en-US`\n    );\n    if (response.ok) {\n      const result = await response.json();\n      return result;\n    } else throw new Error(`Bad request${response.status}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchMovieReviewsToId = async id => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${id}/reviews?${KEY}&language=en-US`\n    );\n    if (response.ok) {\n      const result = await response.json();\n      return result.results;\n    } else throw new Error(`Bad request${response.status}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst API_FETCH = {\n  fetchTopMovies,\n  fetchFindMovies,\n  fetchMovieToId,\n  fetchActorMovieToId,\n  fetchMovieReviewsToId,\n};\nexport default API_FETCH;\n","import API_FETCH from 'components/API/API';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const { moviesId: movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  useEffect(() => {\n    API_FETCH.fetchMovieReviewsToId(movieId).then(setReviews);\n  }, [movieId]);\n\n  return (\n    <div>\n      <h2>REVIEWS</h2>\n      <ul>\n        {reviews.length === 0 ? (\n          <p>We don`t have any reviews for this movie</p>\n        ) : (\n          reviews.map(review => {\n            return (\n              <li key={review.id}>\n                <h3>{review.author}</h3>\n                <p>{review.content}</p>\n              </li>\n            );\n          })\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","BASE_URL","KEY","fetchTopMovies","fetch","response","ok","json","result","results","Error","status","console","log","fetchFindMovies","query","fetchMovieToId","id","fetchActorMovieToId","fetchMovieReviewsToId","movieId","useParams","moviesId","useState","reviews","setReviews","useEffect","API_FETCH","length","map","review","author","content"],"sourceRoot":""}