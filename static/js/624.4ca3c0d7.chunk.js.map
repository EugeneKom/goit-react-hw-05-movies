{"version":3,"file":"static/js/624.4ca3c0d7.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/API/API.js","components/Cast/CastMarcup.styled.js","components/Cast/CastMarcup.jsx","components/Cast/Cast.jsx"],"sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = 'api_key=6628254a4cb0b774890e6f0759ab9dd7';\nconst MOST_POPULAR_FILMS = '/trending/movie/day';\nconst SEARCH_FILMS_API = '/search/movie';\n\nconst fetchTopMovies = async () => {\n  try {\n    const response = await fetch(`\n  ${BASE_URL}${MOST_POPULAR_FILMS}?${KEY}&language=en`);\n    if (response.ok) {\n      const result = await response.json();\n      return result.results;\n    } else throw new Error(`Bad request${response.status}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchFindMovies = async query => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}${SEARCH_FILMS_API}?${KEY}&language=en&query=${query}`\n    );\n    if (response.ok) {\n      const result = await response.json();\n      return result.results;\n    } else throw new Error(`Bad request${response.status}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchMovieToId = async id => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${id}?${KEY}&language=en-US`\n    );\n    if (response.ok) {\n      const result = await response.json();\n      return result;\n    } else throw new Error(`Bad request${response.status}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchActorMovieToId = async id => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${id}/credits?${KEY}&language=en-US`\n    );\n    if (response.ok) {\n      const result = await response.json();\n      return result;\n    } else throw new Error(`Bad request${response.status}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchMovieReviewsToId = async id => {\n  try {\n    const response = await fetch(\n      `${BASE_URL}/movie/${id}/reviews?${KEY}&language=en-US`\n    );\n    if (response.ok) {\n      const result = await response.json();\n      return result.results;\n    } else throw new Error(`Bad request${response.status}`);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst API_FETCH = {\n  fetchTopMovies,\n  fetchFindMovies,\n  fetchMovieToId,\n  fetchActorMovieToId,\n  fetchMovieReviewsToId,\n};\nexport default API_FETCH;\n","import styled from 'styled-components';\n\nexport const AuthorThumb = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  grid-auto-rows: minmax(100px, auto);\n  list-style-type: none;\n  flex-wrap: wrap;\n  h3 {\n    margin: 5px 0px;\n  }\n`;\n","import { AuthorThumb } from './CastMarcup.styled';\n\nconst CastMarcup = ({ actors }) => {\n  return (\n    <>\n      <AuthorThumb>\n        {actors.map(actor => {\n          if (actor.profile_path) {\n            return (\n              <li key={actor.id}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${actor.profile_path}`}\n                  alt={actor.name}\n                  width={90}\n                  height={120}\n                />\n                <h3>{actor.name}</h3>\n                <span>{actor.character}</span>\n              </li>\n            );\n          }\n          return [];\n        })}\n      </AuthorThumb>\n    </>\n  );\n};\n\nexport default CastMarcup;\n","import API_FETCH from 'components/API/API';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport CastMarcup from './CastMarcup';\n\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n  const { moviesId: movieId } = useParams();\n\n  useEffect(() => {\n    API_FETCH.fetchActorMovieToId(movieId).then(({ cast }) => setActors(cast));\n  }, [movieId]);\n\n  return (\n    <>\n      <h2>CAST</h2>\n      <CastMarcup actors={actors} />\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","BASE_URL","KEY","fetchTopMovies","fetch","response","ok","json","result","results","Error","status","console","log","fetchFindMovies","query","fetchMovieToId","id","fetchActorMovieToId","fetchMovieReviewsToId","AuthorThumb","styled","actors","map","actor","profile_path","src","alt","name","width","height","character","useState","setActors","movieId","useParams","moviesId","useEffect","API_FETCH","cast"],"sourceRoot":""}